#! /usr/bin/env python3
#|*****************************************************
# * Copyright         : Copyright (C) 2019
# * Author            : ddc
# * License           : GPL v3
# * Python            : 3.6
#|*****************************************************
# # -*- coding: utf-8 -*-

from src.databases.databases import Databases
################################################################################
################################################################################
################################################################################
class BotConfigsSql():
    def __init__(self, log):
        self.log = log
################################################################################
################################################################################ 
################################################################################
    async def get_bot_configs(self):
        sql = """SELECT bot_configs.*, users.user_name, users.avatar_url
                FROM bot_configs, users
                where bot_configs.author_id = users.discord_user_id;"""
        databases = Databases(self.log)
        return await databases.select(sql)
################################################################################
################################################################################ 
################################################################################
    async def get_bot_prefix(self):
        sql = """SELECT prefix FROM bot_configs;"""
        databases = Databases(self.log)
        return await databases.select(sql)
################################################################################
################################################################################
################################################################################
    async def update_bot_prefix(self, prefix:str):
        sql = f"""UPDATE bot_configs SET prefix = '{prefix}';"""
        databases = Databases(self.log)
        await databases.execute(sql)
################################################################################
################################################################################
################################################################################        
    async def update_bot_description(self, desc:str):
        sql = f"""UPDATE bot_configs SET description = '{desc}';"""
        databases = Databases(self.log)
        await databases.execute(sql)
################################################################################
################################################################################
################################################################################          
    async def update_bot_bg_task_change_game(self, new_status:str):
        sql = f"""UPDATE bot_configs SET bg_task_change_game = '{new_status}';"""
        databases = Databases(self.log)
        await databases.execute(sql)
################################################################################
################################################################################
################################################################################  